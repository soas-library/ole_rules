package org.kuali.ole.deliver.rules.chicago.ncip
import org.kuali.ole.deliver.bo.OleDeliverRequestBo
import org.kuali.ole.deliver.bo.OleDroolsHoldResponseBo
import org.kuali.ole.deliver.bo.OlePatronDocument
import org.kuali.ole.deliver.bo.OleLoanDocument
import org.kuali.ole.deliver.util.OleItemRecordForCirc
import org.kuali.ole.deliver.util.ErrorMessage
import org.kuali.ole.deliver.util.DroolsResponse
import org.kuali.ole.OLEConstants
import org.kuali.ole.deliver.util.NoticeInfo
import org.kuali.ole.deliver.drools.DroolsConstants

rule "2W_1M_6W_3MLoanRecallRequest_new"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$dr: OleDeliverRequestBo(getItemType() in ("LONG","REF"),getItemLocation() in ("MAIN","Level E"),!isClaimsReturnedFlag(),
getRequestTypeCode() in ("Recall/Hold Request"))
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5,$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) not in ("ILL"))

then
$d.setRuleMatched(true);
$n.setNoticeType(OLEConstants.NOTICE_RECALL);
$d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext("minimumLoanPeriod","0-D");
$d.getDroolsExchange().addToContext("recallLoanPeriod","14-D");
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
 end

rule "2W_1M_6W_3MLoanRecallRequest_new1"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5)
$i: OleDeliverRequestBo(getItemType() in ("LONG","REF"),getItemLocation() in ("MAIN","Level E"),isClaimsReturnedFlag(),
getRequestTypeCode() in ("Recall/Hold Request"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

 end


rule "2W_1M_6W_3MLoanRecallRequest_new2"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()>=5)
$i: OleDeliverRequestBo(getItemType() in ("LONG","REF"),getItemLocation() in ("MAIN","Level E"),
getRequestTypeCode() in ("Recall/Hold Request"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("The patron has reached the maximum Request limit");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
 end


rule "2W_1M_6W_3MLoanRecallRequest_new3"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$dr: OleDeliverRequestBo(getItemType() in ("LONG","REF"),getItemLocation() in ("MAIN","Level E"),
getRequestTypeCode() in ("Recall/Hold Request"))
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"), $dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) in ("ILL"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("Items on LOAN to ILL patrons CANT be 'requested' (Recalled or OnHOLD)");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
 end


rule "One_Week_LoanRecalRequest_new"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$dr: OleDeliverRequestBo(getItemType() in ("ONE_WEEK"),!isClaimsReturnedFlag(),getRequestTypeCode() in ("Recall/Hold Request"))
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount() < 5,
$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) not in ("ILL"))


then
$d.setRuleMatched(true);
$n.setNoticeType(OLEConstants.NOTICE_RECALL);
$d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext("minimumLoanPeriod","0-D");
$d.getDroolsExchange().addToContext("recallLoanPeriod","14-D");
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
 end

rule "One_Week_LoanRecalRequest_new1"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount() < 5)
$i: OleDeliverRequestBo(getItemType() in ("ONE_WEEK"),getItemLocation() in ("MAIN","Level E"),isClaimsReturnedFlag(),
getRequestTypeCode() in ("Recall/Hold Request"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

 end

 rule "One_Week_LoanRecalRequest_new2"
 agenda-group "place-request"
 when
 $n: NoticeInfo()
 $d : DroolsResponse()
 $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount() >= 5)
 $i: OleDeliverRequestBo(getItemType() in ("ONE_WEEK"),getItemLocation() in ("MAIN","Level E"),
 getRequestTypeCode() in ("Recall/Hold Request"))

 then
 $d.setRuleMatched(true);
 $d.addErrorMessage("The patron has reached the maximum Request limit");
 $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

  end

 rule "One_Week_LoanRecalRequest_new3"
 agenda-group "place-request"
 when
 $n: NoticeInfo()
 $d : DroolsResponse()
 $i: OleDeliverRequestBo(getItemType() in ("ONE_WEEK"),getItemLocation() in ("MAIN","Level E"),
 getRequestTypeCode() in ("Recall/Hold Request"))
 $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),$i!=null,getLoanedPatronBorrowerType($i.getItemId()) in ("ILL"))
 
 then
 $d.setRuleMatched(true);
 $d.addErrorMessage("Items on LOAN to ILL patrons CANT be 'requested' (Recalled or OnHOLD)");
 $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
  end

rule "2W_1M_6W_3MLoanHoldRequest"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $dr: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),getItemLocation() in ("MAIN","Level E"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5,$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) not in ("ILL"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end

  rule "2W_1M_6W_3MLoanHOLDRequest1"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $i: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),getItemLocation() in ("MAIN","Level E"),isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5)


  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

   end


  rule "2W_1M_6W_3MLoanHoldRequest2"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()>=5)
  $i: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),getItemLocation() in ("MAIN","Level E"),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("The patron has reached the maximum Request limit");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   end

rule "2W_1M_6W_3MLoanHoldRequest5"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $dr: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),getItemLocation() in ("MAIN","Level E"),
  getRequestTypeCode() in ("Hold/Hold Request"))
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) in ("ILL"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Items on LOAN to ILL patrons CANT be 'requested' (Recalled or OnHOLD)");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION); 

   end


 rule "2W_1M_6W_3MLoanHoldRequest3"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("ILL"))
  $dr: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end

  rule "2W_1M_6W_3MLoanHOLDRequest4"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("ILL"))
  $i: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

   end


 rule "2W_1M_6W_3MLoanHoldRequestLIB1"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("LIB"))
  $dr: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request","Recall/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end

 rule "2W_1M_6W_3MLoanHoldRequestLIB2"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("LIB"))
  $dr: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

   end

 rule "2W_1M_6W_3MLoanRecallRequestLIB2"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("LIB"))
  $dr: OleDeliverRequestBo(getItemType() in ("LONG","ONE_WEEK","REF"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Recall/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext("minimumLoanPeriod","0-D");
$d.getDroolsExchange().addToContext("recallLoanPeriod","14-D");
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end


rule "3DLoanRecallRequest_new"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),!isClaimsReturnedFlag(),
getRequestTypeCode() in ("Recall/Hold Request"))
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5,$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) not in ("ILL"))

then
$d.setRuleMatched(true);
$n.setNoticeType(OLEConstants.NOTICE_RECALL);
$d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext("minimumLoanPeriod","0-D");
$d.getDroolsExchange().addToContext("recallLoanPeriod","14-D");
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
 end

rule "3DLoanRecallRequest_new1"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5)
$i: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),isClaimsReturnedFlag(),
getRequestTypeCode() in ("Recall/Hold Request"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

 end


rule "3DLoanRecallRequest_new2"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()>=5)
$i: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),
getRequestTypeCode() in ("Recall/Hold Request"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("The patron has reached the maximum Request limit");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
 end


rule "3DLoanRecallRequest_new3"
agenda-group "place-request"
when
$n: NoticeInfo()
$d : DroolsResponse()
$dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),
getRequestTypeCode() in ("Recall/Hold Request"))
$p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"), $dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) in ("ILL"))

then
$d.setRuleMatched(true);
$d.addErrorMessage("Items on LOAN to ILL patrons CANT be 'requested' (Recalled or OnHOLD)");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
 end


rule "3DLoanHoldRequest"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5,$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) not in ("ILL"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end

  rule "3DLoanHOLDRequest1"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $i: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()<5)


  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

   end


  rule "3DLoanHoldRequest2"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),getRequestedItemRecordsCount()>=5)
  $i: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("The patron has reached the maximum Request limit");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   end

rule "3DLoanHoldRequest5"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),getItemLocation() in ("MAIN","Level E"),
  getRequestTypeCode() in ("Hold/Hold Request"))
  $p: OlePatronDocument(getBorrowerTypeCode() in ("STU","STUX","FULLX","FULL","ALUMNI","EXT","SCHLR","REF"),$dr!=null,getLoanedPatronBorrowerType($dr.getItemId()) in ("ILL"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Items on LOAN to ILL patrons CANT be 'requested' (Recalled or OnHOLD)");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION); 

   end


 rule "3DLoanHoldRequest3"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("ILL"))
  $dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end

  rule "3DLoanHOLDRequest4"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("ILL"))
  $i: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

   end


 rule "3DLoanHoldRequestLIB1"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("LIB"))
  $dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request","Recall/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end

 rule "3DLoanHoldRequestLIB2"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("LIB"))
  $dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Hold/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.addErrorMessage("Item has been claimed as returned. So item is temporarily unavailable for circulation.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);

   end

 rule "3DLoanRecallRequestLIB2"
  agenda-group "place-request"
  when
  $n: NoticeInfo()
  $d : DroolsResponse()
  $p: OlePatronDocument(getBorrowerTypeCode() in ("LIB"))
  $dr: OleDeliverRequestBo(getItemType() in ("THREE_DAYS"),!isClaimsReturnedFlag(),
  getRequestTypeCode() in ("Recall/Hold Request"))

  then
  $d.setRuleMatched(true);
  $d.getDroolsExchange().addToContext("requestExpirationDays",90);
$d.getDroolsExchange().addToContext("minimumLoanPeriod","0-D");
$d.getDroolsExchange().addToContext("recallLoanPeriod","14-D");
$d.getDroolsExchange().addToContext(OLEConstants.RECALL_NOTICE_CONTENT_CONFIG_NAME,"recall-notice");
$d.getDroolsExchange().addToContext(OLEConstants.REQUEST_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"Request Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_NOTICE_CONTENT_CONFIG_NAME,"On Hold Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_EXPIRATION_NOTICE_CONTENT_CONFIG_NAME,"On Hold Expiration Notice");
$d.getDroolsExchange().addToContext(OLEConstants.ON_HOLD_COURTESY_NOTICE_CONTENT_CONFIG_NAME,"On Hold Courtesy Notice");
   end






