package org.kuali.ole.deliver.rules.general

import org.kuali.ole.deliver.bo.OlePatronDocument
import org.kuali.ole.deliver.bo.OleLoanDocument
import org.kuali.ole.deliver.drools.DroolsExchange
import org.kuali.ole.deliver.bo.OleDeliverRequestBo
import org.kuali.ole.deliver.util.OleItemRecordForCirc
import java.util.Date
import java.text.SimpleDateFormat
import org.kuali.ole.deliver.drools.DroolsConstants
import org.kuali.ole.deliver.util.DroolsResponse


 rule "Available Item by different patron with an existing request and recall request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when

  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED","LOST"))
  $p : OlePatronDocument(getBorrowerTypeCode() not in ("LIB"),!isRequestedPatron($i.getItemRecord().getBarCode()))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId())
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item requested by another patron. Patron not in queue");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

 rule "Available Item by same patron with an existing request and recall request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when

  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED","LOST"))
  $p : OlePatronDocument(getBorrowerTypeCode() not in ("LIB"),isRequestedPatron($i.getItemRecord().getBarCode()))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId())
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item on hold for patron at higher queue number");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

  rule "Available Item with an existing recall request"
    agenda-group "request-or-existing-loan-checks"
    activation-group "request-or-existing-loan-checks"
    when
     $p : OlePatronDocument(getBorrowerTypeCode() not in ("LIB"))
     $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED","LOST"))
     $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() == $p.getOlePatronId())
     $l : OleLoanDocument(isRequestPatron())
     $d : DroolsResponse()

    then
     $d.addErrorMessage("The Item has an existing Recall Request and the due date will be truncated accordingly.");
     $d.addErrorMessageCode(DroolsConstants.DUE_DATE_TRUNCATED);
    end

 rule "Loaned Item by different patron with an existing request by a differnt patron"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument(getBorrowerTypeCode() not in ("LIB"))
  $l: OleLoanDocument(getLoanId()!=null,$p2: getOlePatron(), $p2 != null, $p2.getOlePatronId() != $p.getOlePatronId())
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("LOANED"))
  $dr: OleDeliverRequestBo($p1 : getOlePatron(),$p1!=null ,$p1.getBarcode()!=$p.getBarcode())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item loaned by another patron and it has been requested.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_LOANED_ITEM);
  end

 rule "Loaned Item by same patron with an existing request by a differnt patron"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument(getBorrowerTypeCode() not in ("LIB"))
  $l: OleLoanDocument(getLoanId()!=null,$p2: getOlePatron(), $p2 != null, $p2.getOlePatronId() == $p.getOlePatronId())
  $dr: OleDeliverRequestBo($p1 : getOlePatron(),$p1!=null ,$p1.getBarcode()!=$p.getBarcode())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("The item cannot be renewed because it has been requested.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.LOANED_BY_SAME_PATRON_LOST);
  end

 rule "Item loaned by someone else"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($dr: getOleDeliverRequestBo(), $dr == null,$s: getItemStatusRecord(),null != $s, $s.getCode() in ("LOANED"))
  $l: OleLoanDocument($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item currently loaned to another Patron.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.LOANED_BY_DIFFERENT_PATRON);
  end


rule "Item loaned by someone else status Lost"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($dr: getOleDeliverRequestBo(), $dr == null,$s: getItemStatusRecord(),null != $s, $s.getCode() in ("LOST"))
  $l: OleLoanDocument($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is Lost.Hence it cannot be loaned.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.LOANED_BY_SAME_PATRON_LOST);
  end


 rule "Item loaned by same patron and it is Lost"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($dr: getOleDeliverRequestBo(), $dr == null,$s: getItemStatusRecord(),null != $s, $s.getCode() in ("LOST"))
  $l: OleLoanDocument($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId().equals($p.getOlePatronId()))
  $d : DroolsResponse()

  then
  $d.addErrorMessage("Item is Lost.Hence It cannot be renewed.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
  $d.addErrorMessageCode(DroolsConstants.LOANED_BY_SAME_PATRON_LOST);
  end


 rule "Item loaned by same patron without an existing request"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($dr: getOleDeliverRequestBo(), $dr == null,$s: getItemStatusRecord(),null != $s, $s.getCode() in ("LOANED"))
  $l: OleLoanDocument($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId().equals($p.getOlePatronId()))
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item currently loaned by same patron.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.CHECKED_OUT_BY_SAME_PATRON);
  end

rule "Item Status Lost with an existing request"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("LOST"))
  $l: OleLoanDocument(getLoanId()!=null,$p2: getOlePatron(), $p2 != null, $p2.getOlePatronId() != $p.getOlePatronId())
  $dr: OleDeliverRequestBo($p1 : getOlePatron(),$p1!=null ,$p1.getBarcode()!=$p.getBarcode())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item in Lost status. Check in process has to be handled manually.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.LOANED_BY_SAME_PATRON_LOST);
  end

function Date day(){
 Date date = new Date(System.currentTimeMillis());
 return date;
 }
